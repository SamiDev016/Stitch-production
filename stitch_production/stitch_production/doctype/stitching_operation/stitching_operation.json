{
 "actions": [],
 "allow_rename": 1,
 "autoname": "format:Stitching{#####}",
 "creation": "2025-05-29 11:19:05.910803",
 "doctype": "DocType",
 "engine": "InnoDB",
 "field_order": [
  "html",
  "section_break_bjhn",
  "assembled_parts",
  "distination_warehouse",
  "finish_goods",
  "used_parts_batches",
  "amended_from",
  "stock_entry_name",
  "issue_entry_name",
  "cost_tab",
  "stitching_workers_account",
  "stitching_workers",
  "total_workers_cost",
  "extra_cost",
  "total_cost"
 ],
 "fields": [
  {
   "fieldname": "section_break_bjhn",
   "fieldtype": "Section Break"
  },
  {
   "fieldname": "amended_from",
   "fieldtype": "Link",
   "label": "Amended From",
   "no_copy": 1,
   "options": "Stitching Operation",
   "print_hide": 1,
   "read_only": 1,
   "search_index": 1
  },
  {
   "fieldname": "assembled_parts",
   "fieldtype": "Table",
   "label": "Assembled Parts",
   "options": "Assembled Scan"
  },
  {
   "fieldname": "finish_goods",
   "fieldtype": "Table",
   "label": "Finish Goods",
   "options": "Finish Goods",
   "read_only": 1
  },
  {
   "fieldname": "distination_warehouse",
   "fieldtype": "Link",
   "label": "Distination Warehouse",
   "options": "Warehouse"
  },
  {
   "fieldname": "stock_entry_name",
   "fieldtype": "Link",
   "hidden": 1,
   "label": "Stock entry name",
   "options": "Stock Entry",
   "read_only": 1
  },
  {
   "fieldname": "cost_tab",
   "fieldtype": "Tab Break",
   "label": "Cost"
  },
  {
   "fieldname": "stitching_workers",
   "fieldtype": "Table",
   "label": "Stitching Workers",
   "options": "Stitching Workers"
  },
  {
   "fieldname": "total_workers_cost",
   "fieldtype": "Currency",
   "label": "Total Workers Cost",
   "read_only": 1
  },
  {
   "default": "0.0",
   "fieldname": "extra_cost",
   "fieldtype": "Currency",
   "label": "Extra Cost"
  },
  {
   "fieldname": "total_cost",
   "fieldtype": "Currency",
   "label": "Total Cost",
   "read_only": 1
  },
  {
   "fieldname": "used_parts_batches",
   "fieldtype": "Table",
   "label": "Used Parts Batches",
   "options": "Used Parts Batches",
   "read_only": 1
  },
  {
   "fieldname": "issue_entry_name",
   "fieldtype": "Link",
   "hidden": 1,
   "label": "issue_entry_name",
   "options": "Stock Entry",
   "read_only": 1
  },
  {
   "fieldname": "stitching_workers_account",
   "fieldtype": "Link",
   "label": "Stitching Workers Account",
   "options": "Account"
  },
  {
   "fieldname": "html",
   "fieldtype": "HTML",
   "label": "Html",
   "options": "frappe.pages['barcode-workflow'].on_page_load = function(wrapper) {\n    var page = frappe.ui.make_app_page({\n        parent: wrapper,\n        title: '\ud83d\udce6 Barcode Workflow',\n        single_column: true\n    });\n\n    $(wrapper).html(`\n        <div class=\"barcode-container\" style=\"max-width:800px;margin:auto;padding:20px;\">\n            <div class=\"card\" style=\"box-shadow: 0 2px 10px rgba(0,0,0,0.1);\">\n                <div class=\"card-body text-center\">\n                    <h3 class=\"card-title\">\ud83d\udce6 WIP Status Update</h3>\n                    <p class=\"text-muted\">Scan barcode to update work order status</p>\n                    \n                    <div class=\"row mb-4\">\n                        <div class=\"col-md-4\">\n                            <div class=\"status-card bg-light p-3 rounded\" id=\"stitching-card\">\n                                <h5>Stitching</h5>\n                                <div class=\"count\">0</div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                            <div class=\"status-card bg-light p-3 rounded\" id=\"finishing-card\">\n                                <h5>Finishing</h5>\n                                <div class=\"count\">0</div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                            <div class=\"status-card bg-light p-3 rounded\" id=\"emplaage-card\">\n                                <h5>Emplaage</h5>\n                                <div class=\"count\">0</div>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    <input type=\"text\" id=\"barcode_input\" class=\"form-control form-control-lg mb-3\" \n                        placeholder=\"Scan barcode or enter manually...\" autofocus />\n                    \n                    <div id=\"barcode_result\" class=\"alert d-none mb-3\"></div>\n                    \n                    <div class=\"d-flex justify-content-between mt-4\">\n                        <button class=\"btn btn-outline-secondary\" id=\"manual_status_btn\">\n                            <i class=\"fa fa-edit\"></i> Manual Status Update\n                        </button>\n                        <button class=\"btn btn-outline-primary\" id=\"recent_scans_btn\">\n                            <i class=\"fa fa-history\"></i> Recent Scans\n                        </button>\n                    </div>\n                </div>\n            </div>\n            \n            <!-- Hidden form for manual status update -->\n            <div id=\"manual_status_form\" class=\"card mt-3 d-none\" style=\"box-shadow: 0 2px 10px rgba(0,0,0,0.1);\">\n                <div class=\"card-body\">\n                    <h5 class=\"card-title\">Manual Status Update</h5>\n                    <div class=\"form-group\">\n                        <label>Document ID</label>\n                        <input type=\"text\" class=\"form-control\" id=\"manual_doc_id\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label>New Status</label>\n                        <select class=\"form-control\" id=\"manual_status\">\n                            <option value=\"WIP Stitching\">WIP Stitching</option>\n                            <option value=\"WIP Finishing\">WIP Finishing</option>\n                            <option value=\"WIP Emplaage\">WIP Emplaage</option>\n                            <option value=\"Completed\">Completed</option>\n                        </select>\n                    </div>\n                    <button class=\"btn btn-primary\" id=\"update_status_btn\">Update Status</button>\n                    <button class=\"btn btn-outline-secondary ml-2\" id=\"cancel_manual_btn\">Cancel</button>\n                </div>\n            </div>\n        </div>\n    `);\n\n    // Add some styling\n    $('<style>')\n        .text(`\n            .status-card {\n                transition: all 0.3s;\n                cursor: pointer;\n            }\n            .status-card:hover {\n                transform: translateY(-3px);\n                box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n            }\n            .status-card h5 {\n                color: #6c757d;\n            }\n            .status-card .count {\n                font-size: 24px;\n                font-weight: bold;\n                color: #007bff;\n            }\n            #barcode_input {\n                font-size: 18px;\n                height: 50px;\n            }\n        `)\n        .appendTo('head');\n\n    // Initialize variables\n    let recentScans = [];\n    let statusCounts = {\n        'stitching': 0,\n        'finishing': 0,\n        'emplaage': 0\n    };\n\n    // Fake data for demonstration\n    const fakeWorkOrders = {\n        'WO-1001': { name: 'WO-1001', status: 'WIP Stitching', item: 'T-Shirt Basic', qty: 50 },\n        'WO-1002': { name: 'WO-1002', status: 'WIP Finishing', item: 'Jeans Classic', qty: 30 },\n        'WO-1003': { name: 'WO-1003', status: 'WIP Emplaage', item: 'Jacket Winter', qty: 20 },\n        'WO-1004': { name: 'WO-1004', status: 'WIP Stitching', item: 'Dress Summer', qty: 40 },\n        'WO-1005': { name: 'WO-1005', status: 'Completed', item: 'Shirt Formal', qty: 25 }\n    };\n\n    // Update status counts\n    function updateStatusCounts() {\n        statusCounts = {\n            'stitching': 0,\n            'finishing': 0,\n            'emplaage': 0\n        };\n        \n        for (const wo in fakeWorkOrders) {\n            const status = fakeWorkOrders[wo].status;\n            if (status === 'WIP Stitching') statusCounts.stitching++;\n            if (status === 'WIP Finishing') statusCounts.finishing++;\n            if (status === 'WIP Emplaage') statusCounts.emplaage++;\n        }\n        \n        $('#stitching-card .count').text(statusCounts.stitching);\n        $('#finishing-card .count').text(statusCounts.finishing);\n        $('#emplaage-card .count').text(statusCounts.emplaage);\n    }\n\n    // Initialize counts\n    updateStatusCounts();\n\n    // Handle barcode input\n    $('#barcode_input').on('change', function() {\n        const barcode = $(this).val().trim();\n        if (!barcode) return;\n        \n        const resultDiv = $('#barcode_result');\n        resultDiv.removeClass('d-none alert-success alert-danger alert-info');\n        \n        // Find the work order (using fake data)\n        if (fakeWorkOrders[barcode]) {\n            const wo = fakeWorkOrders[barcode];\n            \n            // Determine next status\n            let newStatus = '';\n            if (wo.status === 'WIP Stitching') newStatus = 'WIP Finishing';\n            else if (wo.status === 'WIP Finishing') newStatus = 'WIP Emplaage';\n            else if (wo.status === 'WIP Emplaage') newStatus = 'Completed';\n            else newStatus = wo.status; // no change if already completed\n            \n            // Update status\n            if (newStatus !== wo.status) {\n                fakeWorkOrders[barcode].status = newStatus;\n                updateStatusCounts();\n                \n                resultDiv.addClass('alert-success');\n                resultDiv.html(`\n                    <strong>Success!</strong> Status updated for <strong>${barcode}</strong><br>\n                    <strong>Item:</strong> ${wo.item}<br>\n                    <strong>Qty:</strong> ${wo.qty}<br>\n                    <strong>Old Status:</strong> ${wo.status}<br>\n                    <strong>New Status:</strong> ${newStatus}\n                `);\n                \n                // Add to recent scans\n                recentScans.unshift({\n                    barcode: barcode,\n                    item: wo.item,\n                    oldStatus: wo.status,\n                    newStatus: newStatus,\n                    timestamp: new Date()\n                });\n                if (recentScans.length > 5) recentScans.pop();\n            } else {\n                resultDiv.addClass('alert-info');\n                resultDiv.html(`\n                    <strong>No change needed</strong> for <strong>${barcode}</strong><br>\n                    <strong>Item:</strong> ${wo.item}<br>\n                    <strong>Qty:</strong> ${wo.qty}<br>\n                    <strong>Current Status:</strong> ${wo.status}\n                `);\n            }\n        } else {\n            resultDiv.addClass('alert-danger');\n            resultDiv.html(`<strong>Error!</strong> Work order <strong>${barcode}</strong> not found`);\n        }\n        \n        // Clear input and refocus\n        $(this).val('');\n        $(this).focus();\n    });\n\n    // Manual status update button\n    $('#manual_status_btn').on('click', function() {\n        $('#manual_status_form').toggleClass('d-none');\n        $('#manual_doc_id').focus();\n    });\n\n    $('#cancel_manual_btn').on('click', function() {\n        $('#manual_status_form').addClass('d-none');\n        $('#barcode_input').focus();\n    });\n\n    // Update status manually\n    $('#update_status_btn').on('click', function() {\n        const docId = $('#manual_doc_id').val().trim();\n        const newStatus = $('#manual_status').val();\n        \n        if (!docId) {\n            frappe.msgprint('Please enter a document ID');\n            return;\n        }\n        \n        if (fakeWorkOrders[docId]) {\n            const wo = fakeWorkOrders[docId];\n            const oldStatus = wo.status;\n            \n            // Update status\n            fakeWorkOrders[docId].status = newStatus;\n            updateStatusCounts();\n            \n            // Show success message\n            frappe.msgprint({\n                title: __('Success'),\n                indicator: 'green',\n                message: __(`Status updated for ${docId}<br>\n                    <strong>Item:</strong> ${wo.item}<br>\n                    <strong>Qty:</strong> ${wo.qty}<br>\n                    <strong>Old Status:</strong> ${oldStatus}<br>\n                    <strong>New Status:</strong> ${newStatus}`)\n            });\n            \n            // Add to recent scans\n            recentScans.unshift({\n                barcode: docId,\n                item: wo.item,\n                oldStatus: oldStatus,\n                newStatus: newStatus,\n                timestamp: new Date()\n            });\n            if (recentScans.length > 5) recentScans.pop();\n            \n            // Reset form\n            $('#manual_doc_id').val('');\n            $('#manual_status_form').addClass('d-none');\n            $('#barcode_input').focus();\n        } else {\n            frappe.msgprint({\n                title: __('Error'),\n                indicator: 'red',\n                message: __('Work order {0} not found', [docId])\n            });\n        }\n    });\n\n    // Show recent scans\n    $('#recent_scans_btn').on('click', function() {\n        if (recentScans.length === 0) {\n            frappe.msgprint('No recent scans available');\n            return;\n        }\n        \n        let html = `<div class=\"recent-scans\"><h5>Recent Scans</h5><table class=\"table table-sm\">`;\n        html += `<tr><th>Barcode</th><th>Item</th><th>Old Status</th><th>New Status</th><th>Time</th></tr>`;\n        \n        recentScans.forEach(scan => {\n            html += `<tr>\n                <td>${scan.barcode}</td>\n                <td>${scan.item}</td>\n                <td>${scan.oldStatus}</td>\n                <td>${scan.newStatus}</td>\n                <td>${scan.timestamp.toLocaleTimeString()}</td>\n            </tr>`;\n        });\n        \n        html += `</table></div>`;\n        \n        frappe.msgprint({\n            title: 'Recent Scans',\n            indicator: 'blue',\n            message: html\n        });\n    });\n\n    // Status card click handlers (for quick filtering)\n    $('.status-card').on('click', function() {\n        const statusType = $(this).attr('id').replace('-card', '');\n        let status = '';\n        \n        if (statusType === 'stitching') status = 'WIP Stitching';\n        else if (statusType === 'finishing') status = 'WIP Finishing';\n        else if (statusType === 'emplaage') status = 'WIP Emplaage';\n        \n        let html = `<div class=\"status-items\"><h5>${status} Items</h5><table class=\"table table-sm\">`;\n        html += `<tr><th>Work Order</th><th>Item</th><th>Qty</th></tr>`;\n        \n        let count = 0;\n        for (const wo in fakeWorkOrders) {\n            if (fakeWorkOrders[wo].status === status) {\n                count++;\n                html += `<tr>\n                    <td>${wo}</td>\n                    <td>${fakeWorkOrders[wo].item}</td>\n                    <td>${fakeWorkOrders[wo].qty}</td>\n                </tr>`;\n            }\n        }\n        \n        if (count === 0) {\n            html += `<tr><td colspan=\"3\" class=\"text-muted\">No items found</td></tr>`;\n        }\n        \n        html += `</table></div>`;\n        \n        frappe.msgprint({\n            title: status,\n            indicator: 'blue',\n            message: html\n        });\n    });\n};"
  }
 ],
 "index_web_pages_for_search": 1,
 "is_submittable": 1,
 "links": [],
 "modified": "2025-07-24 13:29:44.493143",
 "modified_by": "Administrator",
 "module": "stitch production",
 "name": "Stitching Operation",
 "naming_rule": "Expression",
 "owner": "Administrator",
 "permissions": [
  {
   "cancel": 1,
   "create": 1,
   "delete": 1,
   "email": 1,
   "export": 1,
   "print": 1,
   "read": 1,
   "report": 1,
   "role": "System Manager",
   "select": 1,
   "share": 1,
   "submit": 1,
   "write": 1
  }
 ],
 "row_format": "Dynamic",
 "sort_field": "creation",
 "sort_order": "DESC",
 "states": []
}
