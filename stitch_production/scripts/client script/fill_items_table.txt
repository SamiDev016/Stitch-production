// Parent form: catch add/remove on custom_rolls
frappe.ui.form.on('Purchase Receipt', {
  custom_rolls_add(frm)    { sync_items(frm); },
  custom_rolls_remove(frm) { sync_items(frm); }
});

// Child‑table: catch edits on Rolls Receipt key fields
frappe.ui.form.on('Rolls Receipt', {
  fabric_item(frm)   { sync_items(frm); },
  weight(frm)        { sync_items(frm); },
  price_per_qty(frm) { sync_items(frm); },
  warehouse(frm)     { sync_items(frm); }
});

function sync_items(frm) {
  // 1) clear existing Items
  frm.clear_table('items');

  // 2) rebuild Items
  (frm.doc.custom_rolls || []).forEach(r => {
    // add the row
    const it = frm.add_child('items');
    it.item_code = r.fabric_item;
    it.qty       = r.weight;
    it.rate      = r.price_per_qty;
    it.warehouse = r.warehouse || frm.doc.warehouse;

    // fetch the master’s item_name & stock_uom, then set those too
    frappe.db.get_value('Item', r.fabric_item, ['item_name', 'stock_uom'])
      .then(({ message }) => {
        if (message) {
          it.item_name = message.item_name;
          it.uom       = message.stock_uom;
          // refresh to show the fetched name/UoM
          frm.refresh_field('items');
        }
      });
  });

  // 3) ensure UI updates even if no rolls
  frm.refresh_field('items');
}
